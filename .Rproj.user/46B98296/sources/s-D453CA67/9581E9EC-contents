---
title: "Shift share analysis"
output:
  md_document:
    variant: markdown_github
---

This is a shift share analysis using employment by industry for what the Bureau of Labor Statistics defines as major labor markets. The data comes from the BLS.

```{r libraries, include=FALSE}

# libraries
library(tidyverse)
library(readr)
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(bbplot)
```

```{r include=FALSE}
# housekeeping so that bbplot works correctly
windowsFonts(Helvetica = windowsFont("TT Helvetica"))
```



# Annnual employment

I'm going to start with the annual file and the code files


```{r include=FALSE}

load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/employment_ann.Rdata')

load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/codes.RData')

```


## Prep

First, replace codes with words and rearrange columns to get a more readable tibble.


```{r include=FALSE}
employment_ann <- merge(code_state,employment_ann)
employment_ann <- merge(code_area, employment_ann)
employment_ann <- merge(code_supersector, employment_ann)
employment_ann <- merge(code_industry, employment_ann)


employment_ann <- employment_ann %>%
  select(state_code, state_name, area_code, area_name,
         supersector_code, supersector_name, industry_code,industry_name,
         year, value)

```


In a previous iteration, I found out once I started analyzing numbers that the industry codes also include the supersector codes, which makes it harder to filter to supersector totals. For example, all the Government industry codes start with '90'. I'm going to remove the supersector codes (the first two digits) from the industry codes. I waited until after I did the merge because the code files use the eight-digit code.


```{r include=FALSE}
employment_ann$industry_code <- substr(employment_ann$industry_code,3,8)

```




# Preliminary analysis

Let's get a feel for what is in the tibble.

```{r unique_count_function, include=FALSE}

df_unique_count <- function(df){
  # create three vectors, one for names, one for types and one for count of unique values
  output_names <- vector("character",ncol(df))
  output_types <- vector("character",ncol(df))
  output_count <- vector("integer",ncol(df))
  # get info
  for (i in seq_along(df)){
    output_names[i] <- names(df)[[i]]
    output_types[i] <- typeof(df[[i]])
    output_count[i] <- nrow(unique(df[i]))
  }
  # create data frames
  new_df <- bind_cols(list(output_names),list(output_types), list(output_count))
  # fix column names
  new_df <- new_df %>% 
    rename(col_name = V1, col_type = V2, col_unique_vals = V3)
  
  # print results
  new_df
}


```

```{r echo=FALSE}
df_unique_count(employment_ann)
```

Year currently has 12 unique values, so 12 years of data.

State codes and names have 52 unique values. Turns out the data includes several metros in Puerto Rico.

The area_code and area_names values show that we have 444 metros total with data on 22 supersectors and 238 industries (including aggregates such as Total Nonfarm).

The BLS has a "Total Private" and "Total Nonfarm" supersector but not a "Total Public" or "Total Government" supersector. Of course, you can get that number by subtracting Total Private from Total Nonfarm.

```{r include=FALSE}
# supersector codes for Total Nonfarm, Total Private and Government
big_picture = c('00','05','06','07','90')
# industry code for entire supersector
big_industry = '000000'

```




## Basic questions

What is the range for the percent of a metro's employment that is public sector? What is the range if you exclude D.C.?
Has the range changed over time?
Have the metros with the highest and lower government employment changed over time (other than D.C. which obviously will have the highest)?

```{r include=FALSE}

metro_gov <- employment_ann %>% 
  filter(supersector_code %in% big_picture, industry_code == big_industry) %>% 
  select(area_name, supersector_name, year, value) %>% 
  spread(supersector_name, value) %>% 
  rename(government=Government, nonfarm = `Total Nonfarm`, private = `Total Private`,
         priv_goods = `Goods Producing`, priv_svc = `Service-Providing`) %>% 
  mutate(pct_government = round(government/nonfarm, digits=2),
         pct_goods = round(priv_goods/nonfarm,digits=2),
         pct_svc = round(priv_svc/nonfarm,digits=2))

```

```{r}
range(metro_gov$pct_government)

```

Surprisingly, D.C. doesn't have the highest percent of government employees

```{r}

metro_gov %>% 
  filter(pct_government == 0.06 | pct_government == 0.42) %>% 
  group_by(area_name)

```

What's the breakdown on this?

```{r}

ref_gov <- metro_gov %>% 
  filter(area_name %in% c('Pittsburgh, PA','Washington-Arlington-Alexandria, DC-VA-MD-WV'),
         year==2017) %>% 
  select(area_name, pct_government) %>% 
  mutate(area_name_r = paste0(ifelse(area_name == 'Pittsburgh, PA',"Pittsburgh", "Washington D.C.")," (",round(100*pct_government,digits=1),"%)"))

metro_gov %>%
  filter(year==2017) %>% 
  ggplot(aes(x=pct_government)) +
  geom_bar() +
  geom_vline(data=ref_gov, aes(xintercept=pct_government,color=area_name_r),size=2) +
  labs(title="Public employment in metro areas",
       x="Government jobs as percent of total nonfarm payroll",
       y="Number of metro areas (444 total)") +
  scale_x_continuous(labels=scales::percent) +
  scale_color_manual(values=c('gold','blue')) +
  theme_light() +
  theme(legend.position=c(.7,.8),
        legend.direction='vertical',
        legend.title=element_blank(),
        text=element_text(family='Helvetica'),
        plot.title=element_text(size=24),
        axis.title=element_text(face='bold'))

```

