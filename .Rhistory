mutate(Netflix_status = ifelse(Netflix_status=="N","Canceled","Subscribed")) %>%
rename("Netflix status" = Netflix_status, "Median time between emails" = median) %>%
kable(align = 'lr') %>%
kable_styling(full_width = F)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
city_budget <- tribble(
~year,~revenue,~expenditure,
2020, 608235885, 608100046,
2019, 582342954, 574901207,
2018, 566481637, 556414971
2017, 545427808, 539193140,
city_budget <- tribble(
~year,~revenue,~expenditure,
2020, 608235885, 608100046,
2019, 582342954, 574901207,
2018, 566481637, 556414971,
2017, 545427808, 539193140,
2016, 525005696, 518983192,
2015, 516550159, 507817535
)
View(city_budget)
library(DT)
city_budget %>%
pivot_wider()
city_budget %>%
pivot_wider(names_from='year')
city_budget %>%
pivot_wider(names_from=year, values_from=c(revenue, expenditure))
city_budget %>%
pivot_wider(names_from=year)
city_budget %>%
pivot_wider(id_cols=c(revenue,expenditure))
city_budget %>%
pivot_wider(id_cols=year)
city_budget %>%
pivot_longer()
city_budget %>%
transpose()
city_budget %>%
pivot_longer()
city_budget %>%
pivot_longer(cols=c(revenue, expenditure),names_to="measure")
city_budget
city_budget %>%
filter(year %in5 c(2020,2015))
city_budget %>%
filter(year %in% c(2020,2015))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=year)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure))
city_budget %>%
filter(year %in% c(2020,2015))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to='measure') %>%
group_by(measure)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to='measure') %>%
arrange(measure)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to='measure') %>%
arrange(measure,year)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to='measure') %>%
arrange(measure,year) %>%
group_by(measure) %>%
mutate(pct_change = (value-lag(value)/lag(value)))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to='measure') %>%
arrange(measure,year) %>%
group_by(measure) %>%
mutate(pct_change = (value-lag(value))/lag(value)))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to='measure') %>%
arrange(measure,year) %>%
group_by(measure) %>%
mutate(pct_change = (value-lag(value))/lag(value))
city_budget %>%
filter(year %in% c(2020,2015))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category")
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category") %>%
pivot_wider(id_cols=category, names_from=year)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category") %>%
pivot_wider(id_cols=category, names_from=year) %>%
mutate(pct_change = (`2020`-`2015`)/`2015`)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category") %>%
pivot_wider(id_cols=category, names_from=year) %>%
mutate(pct_change = round(`2020`-`2015`)/`2015`,digits=3))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category") %>%
pivot_wider(id_cols=category, names_from=year) %>%
mutate(pct_change = round((`2020`-`2015`)/`2015`,digits=3))
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category") %>%
pivot_wider(id_cols=category, names_from=year) %>%
mutate(pct_change = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable() %>%
formatPercentage('pct_change',digits=1)
city_budget %>%
filter(year %in% c(2020,2015)) %>%
pivot_longer(cols=c(revenue, expenditure),names_to="category") %>%
pivot_wider(id_cols=category, names_from=year) %>%
mutate(pct_change = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('pct_change',digits=1)
city_budget <- tribble(
~Year,~Revenue,~Expenditure,
2020, 608235885, 608100046,
2019, 582342954, 574901207,
2018, 566481637, 556414971,
2017, 545427808, 539193140,
2016, 525005696, 518983192,
2015, 516550159, 507817535
)
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(pct_change = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('pct_change',digits=1)
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Percent change` = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Percent change',digits=1)
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Percent change` = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Percent change',digits=1) %>%
formatCurrency(c('2020','2015'))
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Percent change` = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Percent change',digits=1) %>%
formatCurrency(c('2020','2015'),digits=0)
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Percent change` = round((`2020`-`2015`)/`2015`,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Percent change',digits=1) %>%
formatCurrency(c('2020','2015'),digits=0)
start = 516550159
end = 608234885
periods = 5
growth = (end-start) ** (1/periods)
start = 516550159
end = 608234885
periods = 5
growth = (end/start) ** (1/periods)
start = 516550159
end = 608234885
periods = 5
growth = ((end/start) ** (1/periods))-1
start = 516550159
end = 608234885
periods = 5
growth = ((end/start) ** (1/periods))-1
result = start
for (x in 1:5) {
result = result * (1 + growth)
}
result == end
result-end
start = 516550159
end = 608234885
periods = 5
growth = ((end/start) ** (1/periods))-1
result = start
for (x in 1:5) {
result = result * (1 + growth)
}
round(result,digits=0) == end
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Growth rate` = round((`2020`/`2015`)**(1/(2020-2015)-1),digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Growth rate',digits=1) %>%
formatCurrency(c('2020','2015'),digits=0)
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Growth rate` = round((`2020`/`2015`)**(1/(2020-2015))-1),digits=3)) %>%
city_budget %>%
filter(Year %in% c(2020,2015)) %>%
pivot_longer(cols=c(Revenue, Expenditure),names_to="Category") %>%
pivot_wider(id_cols=Category, names_from=Year) %>%
mutate(`Growth rate` = round((`2020`/`2015`)**(1/(2020-2015))-1,digits=3)) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Growth rate',digits=1) %>%
formatCurrency(c('2020','2015'),digits=0)
View(city_budget)
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue))
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), fill='red')
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='red')
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='green') +
geom_line(aes(y=Expenditure),color='red')
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='green') +
geom_line(aes(y=Expenditure),color='red') +
scale_y_continuous(lable=scales::dollar)
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='green') +
geom_line(aes(y=Expenditure),color='red') +
scale_y_continuous(lables=scales::dollar)
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='green') +
geom_line(aes(y=Expenditure),color='red') +
scale_y_continuous(lables=scales::dollar())
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='green') +
geom_line(aes(y=Expenditure),color='red') +
scale_y_continuous(labels=scales::dollar)
city_budget %>%
ggplot(aes(x=Year)) +
geom_line(aes(y=Revenue), color='green') +
geom_line(aes(y=Expenditure),color='red') +
scale_y_continuous(labels=scales::dollar,limits=c(0,NA))
install.packages('tesseract')
install.packages('pdftools')
library(tesseract)
library(pdftools)
test <- pdftools::pdf_convert(pdf='d:\documents\data\pittsburgh\budgets\9317_FY_2019_CAFR.pdf',page=211,dpi=600)
test <- pdftools::pdf_convert(pdf='d:/documents/data/pittsburgh/budgets/9317_FY_2019_CAFR.pdf',page=211,dpi=600)
text <- tesseract::ocr(test)
text
eng <- tesseract("eng")
text <- tesseract::ocr(test,engine=eng)
test <- pdftools::pdf_convert(pdf='d:/documents/data/pittsburgh/budgets/9317_FY_2019_CAFR.pdf',page=210,dpi=600)
text <- tesseract::ocr(test,engine=eng)
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2000, 71614406
)
View(gen_gvt_spending)
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2000, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar)
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2000, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA))
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2000, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA)) +
labs(title="Pittsburgh spending on general government activity",
caption="Source: Comprehensive Annual Financial Report",
y="",
x="")
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = (ref_amt/General_government)**(1/(2019-Year)))
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = (ref_amt/General_government)**(1/(2019-Year))-1)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3))
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select(Year, `Growth rate` = growth_rate)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select(Year, `Growth rate` = growth_rate) %>%
datatable(options=list(dom='t')) %>%
formatPercentage('Growth rate',digits=1)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select(Year, `Growth rate` = growth_rate) %>%
datatable(options=list(dom='t'),rownames = F) %>%
formatPercentage('Growth rate',digits=1)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select(Year, `Growth rate` = growth_rate) %>%
datatable(options=list(dom='t'),rownames = F, fillContainer = F) %>%
formatPercentage('Growth rate',digits=1)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select(Year, `Growth rate` = growth_rate) %>%
datatable(options=list(dom='t'),rownames = F, width=200) %>%
formatPercentage('Growth rate',digits=1)
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2010, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA)) +
labs(title="Pittsburgh spending on general government activity",
caption="Source: Comprehensive Annual Financial Report",
y="",
x="")
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2010, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA)) +
scale_x_date() +
labs(title="Pittsburgh spending on general government activity",
caption="Source: Comprehensive Annual Financial Report",
y="",
x="")
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2010, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA)) +
scale_x_discrete() +
labs(title="Pittsburgh spending on general government activity",
caption="Source: Comprehensive Annual Financial Report",
y="",
x="")
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2010, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA)) +
scale_x_continuous(breaks=c(2010,2015,2019)) +
labs(title="Pittsburgh spending on general government activity",
caption="Source: Comprehensive Annual Financial Report",
y="",
x="")
gen_gvt_spending <- tribble(
~Year, ~General_government,
2019, 104814151,
2018, 107097053,
2017, 79890619,
2016, 90146429,
2015, 92461452,
2014, 74786585,
2013, 84139729,
2012, 76848176,
2011, 72151719,
2010, 71614406
)
gen_gvt_spending %>%
ggplot(aes(x=Year, y=General_government)) +
geom_line() +
scale_y_continuous(labels=scales::dollar, limit=c(0,NA)) +
scale_x_continuous(breaks=c(2010:2019)) +
labs(title="Pittsburgh spending on general government activity",
caption="Source: Comprehensive Annual Financial Report",
y="",
x="")
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select(Year, `Growth rate` = growth_rate) %>%
datatable(options=list(dom='t'),rownames = F, width=200) %>%
formatPercentage('Growth rate',digits=1)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select('Base Year'=Year, `2019 Growth rate` = growth_rate) %>%
datatable(options=list(dom='t'),rownames = F, width=200) %>%
formatPercentage('Growth rate',digits=1)
ref_amt = gen_gvt_spending$General_government[gen_gvt_spending$Year==2019]
gen_gvt_spending %>%
mutate(growth_rate = round((ref_amt/General_government)**(1/(2019-Year))-1,digits=3)) %>%
select('Base Year'=Year, `2019 Growth rate` = growth_rate) %>%
datatable(options=list(dom='t'),rownames = F, width=200) %>%
formatPercentage('2019 Growth rate',digits=1)
