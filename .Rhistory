# period is midnight March 1 of each year to midnight of Nov. 1
calls <- calls %>%
mutate(covid_category = case_when(
between(CREATED_ON,as.POSIXct('2020-03-01 00:00:00'),as.POSIXct('2020-11-01 00:00:00')) ~
'ref2020',
between(CREATED_ON,as.POSIXct('2019-03-01 00:00:00'),as.POSIXct('2019-11-01 00:00:00')) ~
'ref2019',
between(CREATED_ON,as.POSIXct('2018-03-01 00:00:00'),as.POSIXct('2018-11-01 00:00:00')) ~
'ref2018',
between(CREATED_ON,as.POSIXct('2017-03-01 00:00:00'),as.POSIXct('2017-11-01 00:00:00')) ~
'ref2017',
between(CREATED_ON,as.POSIXct('2016-03-01 00:00:00'),as.POSIXct('2016-11-01 00:00:00')) ~
'ref2016',
TRUE ~ 'N'
))
covid_comp <- calls %>%
filter(covid_category != 'N')
annual <- covid_comp %>%
group_by(covid_category) %>%
summarise(calls_rcvd = n()) %>%
rename(year=covid_category) %>%
mutate(year = substr(year,4,8)) %>%
mutate(change = calls_rcvd - lag(calls_rcvd),
pct_change = round(change / lag(calls_rcvd),digits=3))
covid_comp %>%
group_by(covid_category) %>%
summarise(calls_rcvd = n()) %>%
ggplot(aes(x=covid_category,y=calls_rcvd,fill=covid_category)) +
geom_col() +
labs(title = "Calls to Pittsburgh 311 from March through October",
x = '',
y='') +
scale_x_discrete(labels=c('2016','2017','2018','2019','2020')) +
scale_y_continuous(label=comma,limits = c(0,80000)) +
theme(plot.title=element_text(hjust=0.5),
legend.position = 'none')
neighborhoods <- covid_comp %>%
group_by(covid_category, NEIGHBORHOOD) %>%
summarise(calls_rcvd = n()) %>%
mutate(calls_rcvd = ifelse(is.na(calls_rcvd),0,calls_rcvd)) %>%
pivot_wider(id_cols=NEIGHBORHOOD, names_from=covid_category, values_from=calls_rcvd) %>%
mutate(change_19_20 = ref2020-ref2019,
pct_change = round(change_19_20/ref2019,digits=3))
requests <- covid_comp %>%
group_by(covid_category, REQUEST_TYPE) %>%
summarise(calls_rcvd = n()) %>%
mutate(calls_rcvd = ifelse(is.na(calls_rcvd),0,calls_rcvd)) %>%
pivot_wider(id_cols=REQUEST_TYPE,names_from=covid_category,values_from=calls_rcvd) %>%
mutate(change_19_20 = ref2020-ref2019,
pct_change = round(change_19_20/ref2019,digits=3))
View(requests)
request_types <- calls %>%
group_by(REQUEST_TYPE) %>%
summarise(number=n())
codes_r <- codes %>%
full_join(request_types, by=c('Issue'='REQUEST_TYPE'),keep=T)
codes <- readxl::read_xlsx('C:/Users/Brian/Documents/data/pittsburgh/calls_311/311-codebook-request-types.xlsx','Codebook')
test <- CommonPatt(codes$Issue)
View(test)
write_csv(request_types,'c:/Users/Brian/Documents/data/pittsburgh/calls_311/calls_request_types.csv')
write_csv(codes,'c:/users/Brian/Documents/data/Pittsburgh/calls_311/codes.csv')
lookup <- full_join(request_types,codes,by=c('REQUEST_TYPE'='Issue'))
View(lookup)
write_csv(lookup,'c:/users/brian/documents/data/pittsburgh/calls_311/lookup.csv')
install.packages('tesseract')
library('tesseract')
eng <- tesseract(language='eng')
text <- tesseract::ocr(paste0('C:/Users/Brian/Documents/stuff for other reporters/image02.jpg'),
engine=eng)
text
install.packages('magick')
library('magick')
target <- image_read(image_location)
image_location <- 'C:/Users/Brian/Documents/stuff for other reporters/image02.jpg'
target <- image_read(image_location)
text <- target %>%
image_resize("2000x") %>%
image_convert(type = 'Grayscale') %>%
image_trim(fuzz = 40) %>%
image_write(format = 'png', density = '300x300') %>%
tesseract::ocr()
text
text <- target %>%
image_resize("2000x") %>%
image_convert(type = 'Grayscale') %>%
image_trim(fuzz = 40) %>%
image_reducenoise() %>%
image_write(format = 'png', density = '300x300') %>%
tesseract::ocr()
text <- tesseract::ocr(paste0('C:/Users/Brian/Documents/stuff for other reporters/image02.jpg'),
engine=eng)
text
text <- target %>%
image_resize("2000x") %>%
image_convert(type = 'Grayscale') %>%
image_trim(fuzz = 40) %>%
image_write(format = 'png', density = '300x300') %>%
tesseract::ocr()
text
library(rvest)
test <- read_html('https://ehservices.publichealth.lacounty.gov/ezsearch')
test %>%
html_text()
test <- read_html('https://ehservices.publichealth.lacounty.gov/servlet/guest?service=1&enterprise=5')
test %>%
html_text()
library(tidyverse)
library(RSelenium)
library(rvest)
library(rJava)
rd <- rsDriver(browser='firefox')
ffd <- rd$client
ffd$navigate("https://ehservices.publichealth.lacounty.gov/servlet/guest?service=1&enterprise=5")
html_data <- ffd$getPageSource()[[1]]
nbcla <- html_data %>%
read_html()
nbcla %>%
html_text()
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
install.packages(c("backports", "blogdown", "bookdown", "broom"))
blogdown:::serve_site()
blogdown::install_hugo(force = TRUE, version = "latest")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
data_utility <- Sys.getenv("UTILITY_DIR")
data_utility <- Sys.getenv("UTILITY_DIR")
source(file.path(data_utility, metro_handler.R))
source(file.path(data_utility, 'metro_handler.R'))
metro_handler()
data_path <- Sys.getenv("MAIN_DATA_DIR")
dl_path <- file.path(data_path, "national","fed_bls","employment","sm_metro")
raw_data <- file.path(dl_path, "raw")
processed_data <- file.path(dl_path,"processed")
new_download_trigger = 7 # only download new data once a week
new_download <- difftime(file.info(file.path(raw_data,'sm.data.0.current'))$mtime, Sys.time(), units='days') > new_download_trigger
difftime(file.info(file.path(raw_data,'sm.data.0.current'))$mtime, Sys.time(), units='days')
file.exists(file.info(file.path(raw_data,'sm.data.0.current')))
file.exists(file.info(file.path(raw_data,'sm.data.0.current')))
file.exists(file.path(raw_data,'sm.data.0.current'))
source(file.path(data_utility, 'metro_handler.R'))
metro_handler()
metro_handler()
library(tidyverse)
library(readr)
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(bbplot)
library(scales)
library(DT)
library(formattable)
library(kableExtra)
windowsFonts(Helvetica = windowsFont("TT Helvetica"))
data_utility <- Sys.getenv("UTILITY_DIR")
source(file.path(data_utility, 'metro_handler.R'))
metro_handler()
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/employment_ann.Rdata')
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/codes.RData')
employment_ann <- merge(code_state,employment_ann)
employment_ann <- merge(code_area, employment_ann)
employment_ann <- merge(code_supersector, employment_ann)
employment_ann <- merge(code_industry, employment_ann)
employment_ann <- employment_ann %>%
select(state_code, state_name, area_code, area_name,
supersector_code, supersector_name, industry_code,industry_name,
year, value)
employment_ann$industry_code <- substr(employment_ann$industry_code,3,8)
# supersector codes for Total Nonfarm, Total Private and Government
big_picture = c('00','05','06','07','90')
# industry code for entire supersector
big_industry = '000000'
metro_gov <- employment_ann %>%
filter(supersector_code %in% big_picture, industry_code == big_industry) %>%
select(area_name, supersector_name, year, value) %>%
spread(supersector_name, value) %>%
rename(government=Government, nonfarm = `Total Nonfarm`, private = `Total Private`,
priv_goods = `Goods Producing`, priv_svc = `Service-Providing`) %>%
mutate(pct_government = round(government/nonfarm, digits=2),
pct_goods = round(priv_goods/nonfarm,digits=2),
pct_svc = round(priv_svc/nonfarm,digits=2))
ref_gov <- metro_gov %>%
filter(area_name %in% c('Pittsburgh, PA','Washington-Arlington-Alexandria, DC-VA-MD-WV'),
year==2017) %>%
select(area_name, pct_government) %>%
mutate(area_name_r = paste0(ifelse(area_name == 'Pittsburgh, PA',"Pittsburgh", "Washington, D.C.")," (",round(100*pct_government,digits=1),"%)"))
metro_gov %>%
filter(year==2017) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title="Public employment in metro areas",
x="Government jobs as percent of total nonfarm payroll",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
blogdown:::preview_site()
metro_gov %>%
filter(year==2017) %>%
arrange(desc(pct_government)) %>%
top_n(5, wt=pct_government) %>%
select(area_name, pct_government) %>%
mutate(pct_government=formattable::percent(pct_government,digits=1)) %>%
kable(col.names=c('Metro area','Percent of jobs in public sector')) %>%
kable_styling(bootstrap_options=c('striped','responsive'),full_width = F)
max(metro_gov$pct_government)
max(metro_gov$year)
metro_gov %>%
filter(year==max(year)) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title="Public employment in metro areas",
x="Government jobs as percent of total nonfarm payroll",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
ref_year = max(metro_gov$year)
metro_gov %>%
filter(year==ref_year) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title=paste0("Public employment in metro areas (",ref_year,')'),
x="Government jobs as percent of total nonfarm payroll",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
# This code loads the data and does all the preprocessing
# libraries
library(tidyverse)
library(readr)
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(bbplot)
library(scales)
library(DT)
library(formattable)
library(kableExtra)
# housekeeping so that bbplot works correctly
windowsFonts(Helvetica = windowsFont("TT Helvetica"))
# get the data
data_utility <- Sys.getenv("UTILITY_DIR")
source(file.path(data_utility, 'metro_handler.R'))
metro_handler()
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/employment_ann.Rdata')
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/codes.RData')
# add labels and clean up the tibble
employment_ann <- merge(code_state,employment_ann)
employment_ann <- merge(code_area, employment_ann)
employment_ann <- merge(code_supersector, employment_ann)
employment_ann <- merge(code_industry, employment_ann)
employment_ann <- employment_ann %>%
select(state_code, state_name, area_code, area_name,
supersector_code, supersector_name, industry_code,industry_name,
year, value)
# fix the industry code by removing the supersector code
employment_ann$industry_code <- substr(employment_ann$industry_code,3,8)
# supersector codes for Total Nonfarm, Total Private and Government
big_picture = c('00','05','06','07','90')
# industry code for entire supersector
big_industry = '000000'
# get latest year of data
ref_year = max(metro_gov$year)
# pare it down to the things you're going to display
metro_gov <- employment_ann %>%
filter(supersector_code %in% big_picture, industry_code == big_industry) %>%
select(area_name, supersector_name, year, value) %>%
spread(supersector_name, value) %>%
rename(government=Government, nonfarm = `Total Nonfarm`, private = `Total Private`,
priv_goods = `Goods Producing`, priv_svc = `Service-Providing`) %>%
mutate(pct_government = round(government/nonfarm, digits=2),
pct_goods = round(priv_goods/nonfarm,digits=2),
pct_svc = round(priv_svc/nonfarm,digits=2))
ref_gov <- metro_gov %>%
filter(area_name %in% c('Pittsburgh, PA','Washington-Arlington-Alexandria, DC-VA-MD-WV'),
year==ref_year) %>%
select(area_name, pct_government) %>%
mutate(area_name_r = paste0(ifelse(area_name == 'Pittsburgh, PA',"Pittsburgh", "Washington, D.C.")," (",round(100*pct_government,digits=1),"%)"))
metro_gov %>%
filter(year==ref_year) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title=paste0("Public employment in metro areas (",ref_year,')'),
x="Government jobs as percent of total nonfarm payroll",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
metro_gov[year==ref_year]$pct_government
metro_gov[metro_gov$year==ref_year]$pct_government
metro_gov$pct_government[metro_gov$year==ref_year]
# This code loads the data and does all the preprocessing
# libraries
library(tidyverse)
library(readr)
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(bbplot)
library(scales)
library(DT)
library(formattable)
library(kableExtra)
# housekeeping so that bbplot works correctly
windowsFonts(Helvetica = windowsFont("TT Helvetica"))
# get the data
data_utility <- Sys.getenv("UTILITY_DIR")
source(file.path(data_utility, 'metro_handler.R'))
metro_handler()
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/employment_ann.Rdata')
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/codes.RData')
# add labels and clean up the tibble
employment_ann <- merge(code_state,employment_ann)
employment_ann <- merge(code_area, employment_ann)
employment_ann <- merge(code_supersector, employment_ann)
employment_ann <- merge(code_industry, employment_ann)
employment_ann <- employment_ann %>%
select(state_code, state_name, area_code, area_name,
supersector_code, supersector_name, industry_code,industry_name,
year, value)
# fix the industry code by removing the supersector code
employment_ann$industry_code <- substr(employment_ann$industry_code,3,8)
# supersector codes for Total Nonfarm, Total Private and Government
big_picture = c('00','05','06','07','90')
# industry code for entire supersector
big_industry = '000000'
# get latest year of data
ref_year = max(metro_gov$year)
# pare it down to the things you're going to display
metro_gov <- employment_ann %>%
filter(supersector_code %in% big_picture, industry_code == big_industry) %>%
select(area_name, supersector_name, year, value) %>%
spread(supersector_name, value) %>%
rename(government=Government, nonfarm = `Total Nonfarm`, private = `Total Private`,
priv_goods = `Goods Producing`, priv_svc = `Service-Providing`) %>%
mutate(pct_government = round(government/nonfarm, digits=2),
pct_goods = round(priv_goods/nonfarm,digits=2),
pct_svc = round(priv_svc/nonfarm,digits=2))
ref_gov <- metro_gov %>%
filter(area_name %in% c('Pittsburgh, PA','Washington-Arlington-Alexandria, DC-VA-MD-WV'),
year==ref_year) %>%
select(area_name, pct_government) %>%
mutate(area_name_r = paste0(ifelse(area_name == 'Pittsburgh, PA',"Pittsburgh", "Washington, D.C.")," (",round(100*pct_government,digits=1),"%)"))
metro_gov %>%
filter(year==ref_year) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title=paste0("Public employment in metro areas (",ref_year,')'),
x="Government jobs as percent of total nonfarm payroll",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
max(metro_gov$pct_government[metro_gov$year==ref_year])
scales::percent(max(metro_gov$pct_government[metro_gov$year==ref_year]),accuracy=.1)
View(metro_gov)
metro_gov %>%
filter(year==ref_year)
metro_gov %>%
filter(year==ref_year) %>%
arrange(desc(pct_government)) %>%
top_n(5, wt=pct_government) %>%
select(area_name, pct_government) %>%
mutate(pct_government=formattable::percent(pct_government,digits=1)) %>%
kable(col.names=c('Metro area','Percent of jobs in public sector')) %>%
kable_styling(bootstrap_options=c('striped','responsive'),full_width = F)
metro_gov %>%
filter(year==ref_year) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title=paste0("Public employment in metro areas (",ref_year,')'),
x="Government jobs as percent of total nonfarm payroll",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
metro_gov %>% filter(year==ref_year) %>% summarise(max = max(pct_government))
metro_gov %>%
filter(year==ref_year) %>%
ggplot(aes(x=pct_government)) +
geom_bar() +
geom_segment(data=ref_gov, aes(x=pct_government,
xend=pct_government,
y=-2,
yend=2,
color=area_name_r),size=2) +
labs(title = "Pittsburgh has relatively small public sector",
subtitle=paste0("Public employment in metro areas (",ref_year,')'),
x="Percent of total jobs that are in the public sector",
y="Number of metro areas (444 total)",
caption="Data Source: Bureau of Labor Statistics") +
scale_x_continuous(labels=scales::percent) +
scale_color_manual(values=c('gold','blue')) +
theme_light() +
theme(legend.position=c(.7,.8),
legend.direction='vertical',
legend.title=element_blank(),
text=element_text(family='Helvetica'),
plot.title=element_text(size=24),
axis.title=element_text(face='bold'))
max(metro_gov$government[metro_gov$year == ref_year])
metro_gov %>% filter(area_name=='Washington-Arlington-Alexandria, DC-VA-MD-WV', year==ref_year)
metro_gov %>% filter(year==ref_year) %>% arrange(desc(government)) %>% top_n(n=5)
metro_gov %>% filter(year==ref_year, government=max(government))
metro_gov %>% filter(year==ref_year, government==max(government))
metro_gov %>% filter(year==ref_year) %>% filter(government==max(government))
metro_gov %>%
filter(year==ref_year) %>%
arrange(desc(government))
View(metro_gov)
