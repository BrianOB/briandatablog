blogdown::new_site()
blogdown::new_site()
blogdown::new_site()
blogdown::new_site()
?Rprofile
file.edit("~/.Rprofile")
options()
blogdown:::new_post_addin()
mtcards
mtcars
mtcars %>%
group_by(cyl) %>%
ggplot(aes(x=cyl)) %>%
geom_hist()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
ggplot(aes(x=cyl)) %>%
geom_hist()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
ggplot(aes(x=cyl)) +
geom_hist()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
ggplot(aes(x=cyl)) +
geom_histogram()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
ggplot(aes(x=cyl)) +
geom_histogram()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(x=cars)) +
geom_col()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(y=cars)) +
geom_col()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(x=cyl, y=cars)) +
geom_col()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(x=cyl, y=cars, color=cyl)) +
geom_col()
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(x=cyl, y=cars)) +
geom_col(aes(color=cyl))
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(x=cyl, y=cars)) +
geom_col(aes(group=cyl))
library(tidyverse)
mtcars %>%
group_by(cyl) %>%
summarise(cars = n()) %>%
ggplot(aes(x=cyl, y=cars)) +
geom_col(aes(fill=cyl))
blogdown:::serve_site()
source('~/CAR/R scripts/monty_hall_sim.R')
ggplot(data=monty_hall, aes(who_wins, fill=who_wins)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + #crude but effective
ylim(0,1)+
ylab("Ratio")+
xlab("Who wins?")+
theme(legend.position = "none")
install.packages('radix')
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
# libraries
library(tidyverse)
library(readr)
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(bbplot)
library(scales)
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/employment_ann.Rdata')
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/codes.RData')
employment_ann <- merge(code_state,employment_ann)
employment_ann <- merge(code_area, employment_ann)
employment_ann <- merge(code_supersector, employment_ann)
employment_ann <- merge(code_industry, employment_ann)
employment_ann <- employment_ann %>%
select(state_code, state_name, area_code, area_name,
supersector_code, supersector_name, industry_code,industry_name,
year, value)
employment_ann$industry_code <- substr(employment_ann$industry_code,3,8)
# supersector codes for Total Nonfarm, Total Private and Government
big_picture = c('00','05','06','07','90')
# industry code for entire supersector
big_industry = '000000'
metro_gov <- employment_ann %>%
filter(supersector_code %in% big_picture, industry_code == big_industry) %>%
select(area_name, supersector_name, year, value) %>%
spread(supersector_name, value) %>%
rename(government=Government, nonfarm = `Total Nonfarm`, private = `Total Private`,
priv_goods = `Goods Producing`, priv_svc = `Service-Providing`) %>%
mutate(pct_government = round(government/nonfarm, digits=2),
pct_goods = round(priv_goods/nonfarm,digits=2),
pct_svc = round(priv_svc/nonfarm,digits=2))
ref_gov <- metro_gov %>%
filter(area_name %in% c('Pittsburgh, PA','Washington-Arlington-Alexandria, DC-VA-MD-WV'),
year==2017) %>%
select(area_name, pct_government) %>%
mutate(area_name_r = paste0(ifelse(area_name == 'Pittsburgh, PA',"Pittsburgh", "Washington, D.C.")," (",round(100*pct_government,digits=1),"%)"))
View(metro_gov)
write_csv(metro_gov,'data/metro_jobs_annual.csv')
blogdown:::serve_site()
# This code loads the data and does all the preprocessing
# libraries
library(tidyverse)
library(readr)
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(bbplot)
library(scales)
# housekeeping so that bbplot works correctly
windowsFonts(Helvetica = windowsFont("TT Helvetica"))
# get the data
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/employment_ann.Rdata')
load(file='c:/Users/Brian/Documents/Projects/metro_analysis/data_processed/codes.RData')
# add labels and clean up the tibble
employment_ann <- merge(code_state,employment_ann)
employment_ann <- merge(code_area, employment_ann)
employment_ann <- merge(code_supersector, employment_ann)
employment_ann <- merge(code_industry, employment_ann)
employment_ann <- employment_ann %>%
select(state_code, state_name, area_code, area_name,
supersector_code, supersector_name, industry_code,industry_name,
year, value)
# fix the industry code by removing the supersector code
employment_ann$industry_code <- substr(employment_ann$industry_code,3,8)
# supersector codes for Total Nonfarm, Total Private and Government
big_picture = c('00','05','06','07','90')
# industry code for entire supersector
big_industry = '000000'
# pare it down to the things you're going to display
metro_gov <- employment_ann %>%
filter(supersector_code %in% big_picture, industry_code == big_industry) %>%
select(area_name, supersector_name, year, value) %>%
spread(supersector_name, value) %>%
rename(government=Government, nonfarm = `Total Nonfarm`, private = `Total Private`,
priv_goods = `Goods Producing`, priv_svc = `Service-Providing`) %>%
mutate(pct_government = round(government/nonfarm, digits=2),
pct_goods = round(priv_goods/nonfarm,digits=2),
pct_svc = round(priv_svc/nonfarm,digits=2))
ref_gov <- metro_gov %>%
filter(area_name %in% c('Pittsburgh, PA','Washington-Arlington-Alexandria, DC-VA-MD-WV'),
year==2017) %>%
select(area_name, pct_government) %>%
mutate(area_name_r = paste0(ifelse(area_name == 'Pittsburgh, PA',"Pittsburgh", "Washington, D.C.")," (",round(100*pct_government,digits=1),"%)"))
blogdown:::serve_site()
blogdown:::serve_site()
