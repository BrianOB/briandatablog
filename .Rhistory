blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages('miniUI')
blogdown:::serve_site()
blogdown:::new_post_addin()
library(tidyverse)
library(lubridate)
dates <- read_csv('d:/documents/projects/data_workshop/data_raw/misc/netflix_email_dates.txt',
col_names=c("email_dates"))
View(dates)
unlist(dates)
test <- unlist(dates)
split(test," ")
paste(split(test," "),sep=",")
test <- dates %>%
pull(email_dates)
paste(split(test," "),sep=",")
test <- paste(split(test," "),sep=",")
test <- c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020", "May 8 2020",
"May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020", "Apr 23 2020", "Apr 17 2020", "Apr 10 2020",
"Apr 8 2020", "Apr 3 2020", "Mar 28 2020", "Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020",
"Feb 8 2020", "Feb 7 2020", "Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020",
"Jan 30 2020", "Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020", "Dec 28 2019",
"Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019", "Dec 13 2019", "Dec 9 2019",
"Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019", "Nov 27 2019", "Nov 23 2019", "Nov 18 2019",
"Nov 16 2019", "Nov 12 2019", "Nov 9 2019", "Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019",
"Oct 30 2019", "Oct 28 2019", "Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019",
"Oct 15 2019", "Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019", "Sep 12 2019",
"Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019", "Aug 24 2019", "Aug 21 2019",
"Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019", "Aug 1 2019", "Jul 27 2019", "Jul 25 2019",
"Jul 20 2019", "Jul 17 2019", "Jul 13 2019", "Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019",
"Jun 26 2019", "Jun 8 2019")
dates <- as_tibble(email_dates = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020", "May 8 2020",
"May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020", "Apr 23 2020", "Apr 17 2020", "Apr 10 2020",
"Apr 8 2020", "Apr 3 2020", "Mar 28 2020", "Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020",
"Feb 8 2020", "Feb 7 2020", "Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020",
"Jan 30 2020", "Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020", "Dec 28 2019",
"Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019", "Dec 13 2019", "Dec 9 2019",
"Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019", "Nov 27 2019", "Nov 23 2019", "Nov 18 2019",
"Nov 16 2019", "Nov 12 2019", "Nov 9 2019", "Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019",
"Oct 30 2019", "Oct 28 2019", "Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019",
"Oct 15 2019", "Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019", "Sep 12 2019",
"Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019", "Aug 24 2019", "Aug 21 2019",
"Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019", "Aug 1 2019", "Jul 27 2019", "Jul 25 2019",
"Jul 20 2019", "Jul 17 2019", "Jul 13 2019", "Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019",
"Jun 26 2019", "Jun 8 2019"))
dates <- tibble(email_dates = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020", "May 8 2020",
"May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020", "Apr 23 2020", "Apr 17 2020", "Apr 10 2020",
"Apr 8 2020", "Apr 3 2020", "Mar 28 2020", "Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020",
"Feb 8 2020", "Feb 7 2020", "Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020",
"Jan 30 2020", "Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020", "Dec 28 2019",
"Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019", "Dec 13 2019", "Dec 9 2019",
"Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019", "Nov 27 2019", "Nov 23 2019", "Nov 18 2019",
"Nov 16 2019", "Nov 12 2019", "Nov 9 2019", "Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019",
"Oct 30 2019", "Oct 28 2019", "Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019",
"Oct 15 2019", "Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019", "Sep 12 2019",
"Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019", "Aug 24 2019", "Aug 21 2019",
"Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019", "Aug 1 2019", "Jul 27 2019", "Jul 25 2019",
"Jul 20 2019", "Jul 17 2019", "Jul 13 2019", "Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019",
"Jun 26 2019", "Jun 8 2019"))
View(dates)
dates <- tibble(email_dates = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020",
"May 8 2020",          "May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020",
"Apr 23 2020", "Apr 17 2020", "Apr 10 2020", "Apr 8 2020", "Apr 3 2020", "Mar 28 2020",
"Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020", "Feb 8 2020", "Feb 7 2020",
"Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020", "Jan 30 2020",
"Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020",
"Dec 28 2019", "Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019",
"Dec 13 2019", "Dec 9 2019", "Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019",
"Nov 27 2019", "Nov 23 2019", "Nov 18 2019", "Nov 16 2019", "Nov 12 2019", "Nov 9 2019",
"Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019", "Oct 30 2019", "Oct 28 2019",
"Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019", "Oct 15 2019",
"Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019",
"Sep 12 2019", "Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019",
"Aug 24 2019", "Aug 21 2019", "Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019",
"Aug 1 2019", "Jul 27 2019", "Jul 25 2019", "Jul 20 2019", "Jul 17 2019", "Jul 13 2019",
"Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019", "Jun 26 2019", "Jun 8 2019"))
dates <- tibble(email_date = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020",
"May 8 2020",          "May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020",
"Apr 23 2020", "Apr 17 2020", "Apr 10 2020", "Apr 8 2020", "Apr 3 2020", "Mar 28 2020",
"Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020", "Feb 8 2020", "Feb 7 2020",
"Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020", "Jan 30 2020",
"Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020",
"Dec 28 2019", "Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019",
"Dec 13 2019", "Dec 9 2019", "Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019",
"Nov 27 2019", "Nov 23 2019", "Nov 18 2019", "Nov 16 2019", "Nov 12 2019", "Nov 9 2019",
"Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019", "Oct 30 2019", "Oct 28 2019",
"Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019", "Oct 15 2019",
"Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019",
"Sep 12 2019", "Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019",
"Aug 24 2019", "Aug 21 2019", "Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019",
"Aug 1 2019", "Jul 27 2019", "Jul 25 2019", "Jul 20 2019", "Jul 17 2019", "Jul 13 2019",
"Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019", "Jun 26 2019", "Jun 8 2019")) %>%
mutate(email_date = as.Date(email_date,format="%b %d %Y"))
View(dates)
cancelled = as.Date("02-27-2020",format="%m-%d-%Y")
dates <- dates %>%
mutate(subscribed = ifelse(email_date < cancelled,"Y","N"))
mutate(subcribed = ifelse(netflix=="N","Not subscribed","Subscribed"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T)) %>%
mutate(subcribed = ifelse(netflix=="N","Canceled","Subscribed"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T)) %>%
mutate(subcribed = ifelse(subscribed=="N","Canceled","Subscribed"))
cancelled = as.Date("02-27-2020",format="%m-%d-%Y")
dates <- dates %>%
mutate(subscribed = ifelse(email_date < cancelled,"Y","N"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T)) %>%
mutate(subcribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T)) %>%
mutate(subcribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T)) %>%
mutate(subscribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates <- tibble(email_date = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020",
"May 8 2020", "May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020",
"Apr 23 2020", "Apr 17 2020", "Apr 10 2020", "Apr 8 2020", "Apr 3 2020", "Mar 28 2020",
"Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020", "Feb 8 2020", "Feb 7 2020",
"Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020", "Jan 30 2020",
"Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020",
"Dec 28 2019", "Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019",
"Dec 13 2019", "Dec 9 2019", "Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019",
"Nov 27 2019", "Nov 23 2019", "Nov 18 2019", "Nov 16 2019", "Nov 12 2019", "Nov 9 2019",
"Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019", "Oct 30 2019", "Oct 28 2019",
"Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019", "Oct 15 2019",
"Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019",
"Sep 12 2019", "Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019",
"Aug 24 2019", "Aug 21 2019", "Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019",
"Aug 1 2019", "Jul 27 2019", "Jul 25 2019", "Jul 20 2019", "Jul 17 2019", "Jul 13 2019",
"Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019", "Jun 26 2019", "Jun 8 2019")) %>%
mutate(email_date = as.Date(email_date,format="%b %d %Y"))
cancelled = as.Date("02-27-2020",format="%m-%d-%Y")
dates <- dates %>%
mutate(subscribed = ifelse(email_date < cancelled,"Y","N"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T)) %>%
mutate(subscribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates <- read_csv('d:/documents/projects/data_workshop/data_raw/misc/netflix_email_dates.txt',
col_names=c("email_dates"))
dates <- dates %>%
separate(email_dates,sep=" ",
into=c("month","day","year"))
dates <- dates %>%
mutate(email_date = as.Date(paste(month, day, year),format="%b %d %Y"))
cancelled = as.Date("02-27-2020",format="%m-%d-%Y")
dates <- dates %>%
mutate(netflix = ifelse(email_date < cancelled,"Y","N"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(netflix) %>%
summarise(mean = mean(time_between_emails,na.rm=T),
median = median(time_between_emails,na.rm=T)) %>%
mutate(netflix = ifelse(netflix=="N","Not subscribed","Subscribed"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T),.groups='keep') %>%
mutate(subscribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates <- tibble(email_date = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020",
"May 8 2020", "May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020",
"Apr 23 2020", "Apr 17 2020", "Apr 10 2020", "Apr 8 2020", "Apr 3 2020", "Mar 28 2020",
"Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020", "Feb 8 2020", "Feb 7 2020",
"Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020", "Jan 30 2020",
"Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020",
"Dec 28 2019", "Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019",
"Dec 13 2019", "Dec 9 2019", "Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019",
"Nov 27 2019", "Nov 23 2019", "Nov 18 2019", "Nov 16 2019", "Nov 12 2019", "Nov 9 2019",
"Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019", "Oct 30 2019", "Oct 28 2019",
"Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019", "Oct 15 2019",
"Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019",
"Sep 12 2019", "Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019",
"Aug 24 2019", "Aug 21 2019", "Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019",
"Aug 1 2019", "Jul 27 2019", "Jul 25 2019", "Jul 20 2019", "Jul 17 2019", "Jul 13 2019",
"Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019", "Jun 26 2019", "Jun 8 2019")) %>%
mutate(email_date = as.Date(email_date,format="%b %d %Y"))
cancelled = as.Date("02-27-2020",format="%m-%d-%Y")
dates <- dates %>%
mutate(subscribed = ifelse(email_date < cancelled,"Y","N"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(median = median(time_between_emails,na.rm=T),.groups='keep') %>%
mutate(subscribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(subscribed) %>%
summarise(`Median time between emails` = median(time_between_emails,na.rm=T),.groups='keep') %>%
mutate(subscribed = ifelse(subscribed=="N","Canceled","Subscribed"))
dates <- tibble(email_date = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020",
"May 8 2020", "May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020",
"Apr 23 2020", "Apr 17 2020", "Apr 10 2020", "Apr 8 2020", "Apr 3 2020", "Mar 28 2020",
"Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020", "Feb 8 2020", "Feb 7 2020",
"Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020", "Jan 30 2020",
"Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020",
"Dec 28 2019", "Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019",
"Dec 13 2019", "Dec 9 2019", "Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019",
"Nov 27 2019", "Nov 23 2019", "Nov 18 2019", "Nov 16 2019", "Nov 12 2019", "Nov 9 2019",
"Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019", "Oct 30 2019", "Oct 28 2019",
"Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019", "Oct 15 2019",
"Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019",
"Sep 12 2019", "Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019",
"Aug 24 2019", "Aug 21 2019", "Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019",
"Aug 1 2019", "Jul 27 2019", "Jul 25 2019", "Jul 20 2019", "Jul 17 2019", "Jul 13 2019",
"Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019", "Jun 26 2019", "Jun 8 2019")) %>%
mutate(email_date = as.Date(email_date,format="%b %d %Y"))
library(tidyverse)
library(lubridate)
dates <- tibble(email_date = c("Jun 7 2020", "Jun 5 2020", "Jun 5 2020", "May 29 2020", "May 25 2020", "May 15 2020",
"May 8 2020", "May 8 2020", "May 1 2020", "Apr 26 2020", "Apr 24 2020",
"Apr 23 2020", "Apr 17 2020", "Apr 10 2020", "Apr 8 2020", "Apr 3 2020", "Mar 28 2020",
"Mar 27 2020", "Mar 24 2020", "Mar 17 2020", "Feb 27 2020", "Feb 8 2020", "Feb 7 2020",
"Feb 7 2020", "Feb 5 2020", "Feb 4 2020", "Feb 3 2020", "Jan 30 2020", "Jan 30 2020",
"Jan 29 2020", "Jan 25 2020", "Jan 23 2020", "Jan 19 2020", "Jan 18 2020", "Jan 17 2020",
"Jan 11 2020", "Jan 11 2020", "Jan 9 2020", "Jan 5 2020", "Jan 4 2020", "Jan 1 2020",
"Dec 28 2019", "Dec 27 2019", "Dec 24 2019", "Dec 20 2019", "Dec 20 2019", "Dec 16 2019",
"Dec 13 2019", "Dec 9 2019", "Dec 3 2019", "Dec 1 2019", "Nov 30 2019", "Nov 29 2019",
"Nov 27 2019", "Nov 23 2019", "Nov 18 2019", "Nov 16 2019", "Nov 12 2019", "Nov 9 2019",
"Nov 5 2019", "Nov 2 2019", "Nov 2 2019", "Nov 1 2019", "Oct 30 2019", "Oct 28 2019",
"Oct 28 2019", "Oct 21 2019", "Oct 21 2019", "Oct 20 2019", "Oct 19 2019", "Oct 15 2019",
"Oct 13 2019", "Oct 11 2019", "Oct 7 2019", "Oct 5 2019", "Oct 4 2019", "Sep 30 2019",
"Sep 27 2019", "Sep 21 2019", "Sep 20 2019", "Sep 14 2019", "Sep 14 2019", "Sep 13 2019",
"Sep 12 2019", "Sep 5 2019", "Sep 4 2019", "Aug 31 2019", "Aug 30 2019", "Aug 24 2019",
"Aug 24 2019", "Aug 21 2019", "Aug 17 2019", "Aug 10 2019", "Aug 8 2019", "Aug 3 2019",
"Aug 1 2019", "Jul 27 2019", "Jul 25 2019", "Jul 20 2019", "Jul 17 2019", "Jul 13 2019",
"Jul 13 2019", "Jul 10 2019", "Jul 5 2019", "Jul 4 2019", "Jun 26 2019", "Jun 8 2019")) %>%
mutate(email_date = as.Date(email_date,format="%b %d %Y"))
cancelled = as.Date("02-27-2020",format="%m-%d-%Y")
dates <- dates %>%
mutate(Netflix_status = ifelse(email_date < cancelled,"Y","N"))
dates %>%
arrange(email_date) %>%
mutate(time_between_emails = email_date - lag(email_date)) %>%
group_by(Netflix_status) %>%
summarise(`Median time between emails` = median(time_between_emails,na.rm=T),.groups='keep') %>%
mutate(Netflix_status = ifelse(Netflix_status=="N","Canceled","Subscribed"))
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
install.packages(c("httpuv", "later", "vctrs"))
install.packages(c("httpuv", "later", "vctrs"))
blogdown:::serve_site()
library(rmarkdown)
library(bookdown)
blogdown:::serve_site()
install.packages("gifski")
blogdown:::serve_site()
library(knitr)
detach("package:knitr", unload = TRUE)
install.packages('blogdown')
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages('yaml')
install.packages("yaml")
install.packages("yaml")
install.packages("yaml")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::serve_site()
# libraries
library(tidyverse)
library(janitor)
library(lubridate)
library(patchwork)
# parameters
swpa <- c("Allegheny County","Armstrong County","Beaver County","Butler County",
"Fayette County","Greene County","Lawrence County","Washington County",
"Westmoreland County")
time_zone <- "America/New_York"
fmt <- "%m/%d/%Y"
start_date <- as_date("4/1/2020",tz=time_zone, format=fmt)
# load data
path_raw_data <- 'D:/Documents/projects/data_workshop/data_raw/covid/covid_casesdeaths_reshaped_bln.csv'
local_data <- read_csv(path_raw_data)
local_data <- local_data %>%
clean_names()
# convert date string to date variable
local_data <- local_data %>%
mutate(date = as.Date(date, '%m/%d/%y'))
# create tables for latest totals
latest <- local_data %>%
filter(date == max(date))
pa_latest <- latest %>%
filter(state=="PA")
swpa_latest <- pa_latest %>%
filter(county_name %in% swpa)
latest_table <- bind_rows(
latest %>%
group_by(date) %>%
summarise(cases = sum(cases),
deaths = sum(deaths)) %>%
mutate(name = "US total"),
pa_latest %>%
group_by(date) %>%
summarise(cases = sum(cases),
deaths = sum(deaths)) %>%
mutate(name = "PA total"),
swpa_latest %>%
group_by(date) %>%
summarise(cases=sum(cases),
deaths=sum(deaths)) %>%
mutate(name="SWPA total"),
swpa_latest %>%
rename(name=county_name)) %>%
select(name, date, cases, deaths)
# calculate daily numbers
local_data <- local_data %>%
group_by(state, county_name) %>%
mutate(new_cases = cases - lag(cases, order_by = date),
new_deaths = deaths - lag(deaths, order_by = date))
# subset data for easier graphing
us_sum <- local_data %>%
filter(date >= start_date) %>%
group_by(date) %>%
summarise(new_cases = sum(new_cases),
new_deaths = sum(new_deaths))
pa_sum <- local_data %>%
filter(date >= start_date, state=="PA") %>%
group_by(date) %>%
summarise(new_cases = sum(new_cases),
new_deaths = sum(new_deaths))
swpa_data <- local_data %>%
filter(date >= start_date, state=="PA", county_name %in% swpa)
swpa_sum <- swpa_data %>%
group_by(date) %>%
summarise(new_cases = sum(new_cases),
new_deaths = sum(new_deaths))
case_num <- latest_table %>%
filter(name=="SWPA total") %>%
pull(cases)
death_num <- latest_table %>%
filter(name=="SWPA total") %>%
pull(deaths)
subtitle_text <- paste0("Total cases: ", prettyNum(case_num,big.mark = ','),
"  Total deaths: ", prettyNum(death_num, big.mark=","))
swpa_cases <- swpa_sum %>%
ggplot(aes(x=date, y=new_cases)) +
geom_col(fill='yellow',color='black') +
labs(title="New cases",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
swpa_deaths <- swpa_sum %>%
ggplot(aes(x=date, y=new_deaths)) +
geom_col(fill='red',color='black') +
labs(title="New deaths",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
(swpa_cases | swpa_deaths) + plot_annotation(title="Covid-19 trends for Southwestern PA",
subtitle=subtitle_text,
caption="Includes Allegheny, Armstrong, Beaver, Butler, Fayette, Greene, Lawrence, Washington and Westmoreland counties.\nSource:USAFacts.org",
theme = theme(plot.title = element_text(size = rel(2),
hjust=0.5),
plot.subtitle=element_text(hjust=0.5)))
case_num <- latest_table %>%
filter(name=="US total") %>%
pull(cases)
death_num <- latest_table %>%
filter(name=="US total") %>%
pull(deaths)
subtitle_text <- paste0("Total cases: ", prettyNum(case_num,big.mark = ','),
"  Total deaths: ", prettyNum(death_num, big.mark=","))
us_cases <- us_sum %>%
ggplot(aes(x=date, y=new_cases)) +
geom_col(fill='yellow',color='black') +
labs(title="New cases",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
us_deaths <- us_sum %>%
ggplot(aes(x=date, y=new_deaths)) +
geom_col(fill='red',color='black') +
labs(title="New deaths",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
(us_cases | us_deaths) + plot_annotation(title="Covid-19 trends for the United States",
subtitle=subtitle_text,
caption="Source: USAFacts.org",
theme = theme(plot.title = element_text(size = rel(2),
hjust=0.5),
plot.subtitle=element_text(hjust=0.5)))
case_num <- latest_table %>%
filter(name=="PA total") %>%
pull(cases)
death_num <- latest_table %>%
filter(name=="PA total") %>%
pull(deaths)
subtitle_text <- paste0("Total cases: ", prettyNum(case_num,big.mark = ','),
"  Total deaths: ", prettyNum(death_num, big.mark=","))
pa_cases <- pa_sum %>%
ggplot(aes(x=date, y=new_cases)) +
geom_col(fill='yellow',color='black') +
labs(title="New cases",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
pa_deaths <- pa_sum %>%
ggplot(aes(x=date, y=new_deaths)) +
geom_col(fill='red',color='black') +
labs(title="New deaths",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
(pa_cases | pa_deaths) + plot_annotation(title="Covid-19 trends for Pennsylvania",
subtitle=subtitle_text,
caption="Source: USAFacts.org",
theme = theme(plot.title = element_text(size = rel(2),
hjust=0.5),
plot.subtitle=element_text(hjust=0.5)))
graph_county <- function(county, data) {
title_text <- paste("Covid-19 trends for",county)
case_num <- data %>%
filter(name==county) %>%
pull(cases)
death_num <- latest_table %>%
filter(name==county) %>%
pull(deaths)
subtitle_text <- paste0("Total cases: ", prettyNum(case_num,big.mark = ','),
"  Total deaths: ", prettyNum(death_num, big.mark=","))
county_cases <- swpa_data %>%
filter(county_name==county) %>%
ggplot(aes(x=date, y=new_cases)) +
geom_col(fill='yellow',color='black') +
labs(title="New cases",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
county_deaths <- swpa_data %>%
filter(county_name==county) %>%
ggplot(aes(x=date, y=new_deaths)) +
geom_col(fill='red',color='black') +
labs(title="New deaths",
x="",
y="") +
scale_y_continuous(label=scales::label_comma(accuracy=1))
(county_cases | county_deaths) + plot_annotation(title=title_text,
subtitle=subtitle_text,
caption="Source: USAFacts.org",
theme = theme(plot.title = element_text(size = rel(2),
hjust=0.5),
plot.subtitle=element_text(hjust=0.5)))
}
graph_county("Allegheny County",latest_table)
graph_county("Armstrong County", latest_table)
graph_county("Beaver County",latest_table)
graph_county("Butler County",latest_table)
graph_county("Fayette County",latest_table)
graph_county("Greene County",latest_table)
graph_county("Lawrence County",latest_table)
graph_county("Washington County",latest_table)
graph_county("Westmoreland County",latest_table)
blogdown:::serve_site()
unlink('content/post/2020-05-09-local-covid-19-trends_cache', recursive = TRUE)
blogdown:::serve_site()
knit_with_parameters('~/GitHub/briandatablog/content/post/2020-05-09-local-covid-19-trends.Rmd', encoding = 'UTF-8')
setwd('C:/Users/bowli/Documents/GitHub/briandatablog')
getwd()
dir('C:/Users/bowli/Documents/GitHub/briandatablog')
dir.exists('C:/Users/bowli/Documents/GitHub/briandatablog')
blogdown:::serve_site()
